#!/usr/bin/env bash
#
# This stackscript will download a private git repo and then execute a second stage script
# within the repo named "bootstrap-fedora.sh".  It is assumed that subsequent changes will
# be delegated to configuration management (ie. ansible, puppet, chef, etc.) and that vaulted
# secrets can be decrypted using password in variable VAULT_PASSWORD.
#<UDF name="GIT_REPO" label="Git repository" />
#<UDF name="GIT_BRANCH" label="Git repository branch" />
#<UDF name="GIT_ACCESS_KEY64" label="(unencrypted) Git access key to pull repo" />
#<UDF name="VAULT_PASSWORD" label="Password used to decrypt vault protected files" />

touch /root/.bootstrap_started

# install git client
yum install -y git  | tee -a /root/.bootstrap_stdout
[[ $? -ne 0 ]] && echo "ERROR: yum install git" >> /root/.bootstrap_error

# install vault password
echo $VAULT_PASSWORD > /root/.vault_pass

# install ssh access key
echo "$GIT_ACCESS_KEY64" | base64 -d > /root/.ssh/id_rsa_git
chmod 0600 /root/.ssh/id_rsa_git

# stash git parameters as environment variables
echo "export GIT_REPO=\"$GIT_REPO\"" >> /root/.bash_profile
echo "export GIT_BRANCH=\"$GIT_BRANCH\"" >> /root/.bash_profile

# setup so that our private key and github's public hostkey is used
cat > /root/.ssh/config << EOF
Host *
    IdentityFile /root/.ssh/id_rsa_git
    StrictHostKeyChecking no
    IdentitiesOnly yes
EOF
cat > /root/.ssh/known_hosts << EOF 
github.com,* ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
EOF

# clone the repo into /rootgit_repo
git clone -b $GIT_BRANCH $GIT_REPO /root/git_repo | tee -a /root/.bootstrap_stdout
[[ $? -ne 0 ]] && echo "ERROR: git clone -b $GIT_BRANCH $GIT_REPO /root/git_repo" >> /root/.bootstrap_error

# trigger second stage bootstrap script
cd /root/git_repo && ./bootstrap-fedora.sh  $LINODE_ID  | tee -a /root/.bootstrap_stdout
[[ $? -ne 0 ]] && echo "ERROR: /root/git_repo/bootstrap-fedora.sh $LINODE_ID" >> /root/.bootstrap_error

# cleanup
[[ ! -e /root/.bootstrap_error ]] && rm -rf /root/git_repo

touch /root/.bootstrap_ended
